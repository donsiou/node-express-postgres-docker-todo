version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - db
    ports:
      - '3000:3000'
    tty: true
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      UV_THREADPOOL_SIZE: 128
      NODE_ENV: development
      LOG_LEVEL: info
      PORT: 3000
      PG_CONNECTION: postgres://todo-user:password123!@db:5432/dev-todo
      PG_MIGRATION_CONNECTION: postgres://root-user:password123!@db:5432/postgres
  db-migration:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: ['node', './db/run-migration.js', '/usr/src/app/db/patches']
    environment:
      UV_THREADPOOL_SIZE: 128
      NODE_ENV: development
      PG_CONNECTION: postgres://todo-user:password123!@db:5432/dev-todo
      PG_MIGRATION_CONNECTION: postgres://root-user:password123!@db:5432/postgres
    tty: true
    depends_on:
      - db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  db:
    image: postgres:alpine
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: root-user
      POSTGRES_PASSWORD: password123!
      PGPASSWORD: password123!
    healthcheck:
      test: ['CMD', '/health-check.sh', 'postgres', 'root-user', 'password123!']
      interval: 15s
      timeout: 10s
      retries: 20
    ports:
      - '15432:5432'
    tty: true
    volumes:
      - ./db/health-check.sh:/health-check.sh
      - ./db/postgresql.conf:/etc/postgresql.conf
    tmpfs:
      - /var/lib/postgresql/data
